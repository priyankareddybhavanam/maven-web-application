def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
node{
     buildName 'dev - ${BUILD_NUMBER}'
     buildDescription 'scriptedway'
    def mavenHome = tool name : "3.8.5"
    // push or get the source code
    stage('checkout stage')
    {
        git branch: 'development', credentialsId: '6c372e2c-4582-4596-b88c-7028958f68d6', url: 'https://github.com/priyankareddybhavanam/maven-web-application.git'
}
    try
    {
    //build stage
    stage('buildstage')
    {
        sh "$mavenHome/bin/mvn clean package"
    }
    //generate sonarqube report
    stage('sonarqube report')
    {
        sh "$mavenHome/bin/mvn sonar:sonar"
    }
    //upload artifact to nexus
    stage('upload artifact to nexus')
    {
        sh "$mavenHome/bin/mvn deploy"
    }
    //deploy to tomcat
    stage('deploy to tomcat')
    {
        sshagent(['f1715cf4-c60e-4272-a412-8e10a7d21a8b']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@65.0.32.64:/opt/apache-tomcat-9.0.59/webapps"
    }
}
}
catch(e){
currentBuild.result = "FAILED"
}
finally{
sendslacknotifications(currentBuild.result)
}
}
